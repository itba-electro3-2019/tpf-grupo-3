
// Verilog netlist produced by program backanno, Version Radiant Software (64-bit) 1.1.0.165.1

// backanno -o Pong_impl_1_vo.vo -sp High-Performance_1.2V -w -neg -gui Pong_impl_1.udb 
// Netlist created on Sat Nov 09 21:28:26 2019
// Netlist written on Sat Nov 09 21:28:30 2019
// Design is for device iCE40UP5K
// Design is for package SG48
// Design is for performance grade High-Performance_1.2V

`timescale 1 ns / 1 ps

module pong ( hsync, vsync, red, green, blue, ref_clk );
  input  ref_clk;
  output hsync, vsync, red, green, blue;
  wire   \vga_controller/VGAVerticalCounter/n45[9] , 
         \vga_controller/VGAVerticalCounter/n2314 , 
         \vga_controller/VGAVerticalCounter/n1532 , \ypix[9] , 
         \vga_controller/n554 , \vga_controller/n1375 , vga_clk, 
         \vga_controller/VGAVerticalCounter/n45[8] , 
         \vga_controller/VGAVerticalCounter/n45[7] , 
         \vga_controller/VGAVerticalCounter/n2311 , \ypix[8] , 
         \vga_controller/VGAVerticalCounter/n1530 , 
         \vga_controller/VGAVerticalCounter/ypix[7] , 
         \vga_controller/VGAVerticalCounter/n45[6] , 
         \vga_controller/VGAVerticalCounter/n45[5] , 
         \vga_controller/VGAVerticalCounter/n2308 , \ypix[6] , 
         \vga_controller/VGAVerticalCounter/n1528 , 
         \vga_controller/VGAVerticalCounter/ypix[5] , 
         \vga_controller/VGAVerticalCounter/n45[4] , 
         \vga_controller/VGAVerticalCounter/n45[3] , 
         \vga_controller/VGAVerticalCounter/n2305 , \vga_controller/ypix[4] , 
         \vga_controller/VGAVerticalCounter/n1526 , 
         \vga_controller/VGAVerticalCounter/ypix[3] , 
         \vga_controller/VGAVerticalCounter/n45[2] , 
         \vga_controller/VGAVerticalCounter/n45[1] , 
         \vga_controller/VGAVerticalCounter/n2302 , 
         \vga_controller/VGAVerticalCounter/ypix[2] , 
         \vga_controller/VGAVerticalCounter/n1524 , 
         \vga_controller/VGAVerticalCounter/ypix[1] , 
         \vga_controller/VGAVerticalCounter/n45[0] , 
         \vga_controller/VGAVerticalCounter/n2299 , 
         \vga_controller/VGAVerticalCounter/ypix[0] , VCC_net, 
         \vga_controller/VGAHorizontalCounter/n45[0] , 
         \vga_controller/VGAHorizontalCounter/n2293 , 
         \vga_controller/VGAHorizontalCounter/xpix[0] , 
         \vga_controller/VGAHorizontalCounter/n582 , 
         \vga_controller/VGAHorizontalCounter/n1535 , 
         \vga_controller/VGAHorizontalCounter/n45[9] , 
         \vga_controller/VGAHorizontalCounter/n2341 , 
         \vga_controller/VGAHorizontalCounter/n1543 , \vga_controller/xpix[9] , 
         \vga_controller/VGAHorizontalCounter/n45[8] , 
         \vga_controller/VGAHorizontalCounter/n45[7] , 
         \vga_controller/VGAHorizontalCounter/n2338 , \vga_controller/xpix[8] , 
         \vga_controller/VGAHorizontalCounter/n1541 , \vga_controller/xpix[7] , 
         \vga_controller/VGAHorizontalCounter/n45[6] , 
         \vga_controller/VGAHorizontalCounter/n45[5] , 
         \vga_controller/VGAHorizontalCounter/n2335 , \vga_controller/xpix[6] , 
         \vga_controller/VGAHorizontalCounter/n1539 , \vga_controller/xpix[5] , 
         \vga_controller/VGAHorizontalCounter/n45[4] , 
         \vga_controller/VGAHorizontalCounter/n45[3] , 
         \vga_controller/VGAHorizontalCounter/n2332 , \vga_controller/xpix[4] , 
         \vga_controller/VGAHorizontalCounter/n1537 , 
         \vga_controller/VGAHorizontalCounter/xpix[3] , 
         \vga_controller/VGAHorizontalCounter/n45[2] , 
         \vga_controller/VGAHorizontalCounter/n45[1] , 
         \vga_controller/VGAHorizontalCounter/n2329 , 
         \vga_controller/VGAHorizontalCounter/xpix[2] , 
         \vga_controller/VGAHorizontalCounter/xpix[1] , \vga_controller/n1963 , 
         \vga_controller/n12 , \vga_controller/n1104 , \vga_controller/n2320 , 
         \vga_controller/n1878 , \vga_controller/n210 , 
         \vga_controller/VGAHorizontalCounter/n11 , \vga_controller/n2079 , 
         \vga_controller/hrange[1] , hsync_c, \vga_controller/n2081 , 
         \vga_controller/n2082 , \vga_controller/n6 , \vga_controller/n2323 , 
         n1874, \vga_controller/n18 , \vga_controller/n17 , 
         \vga_controller/vrange[0] , blue_c, \vga_controller/n1406 , 
         \vga_controller/vrange_1__N_26 , \vga_controller/n57 , 
         \vga_controller/n4_adj_379 , \vga_controller/n1399 , 
         \vga_controller/n70 , \vga_controller/n101 , \vga_controller/n2083 , 
         \vga_controller/VGAVerticalCounter/n6 , \vga_controller/n1365 , n1767, 
         n4, \vga_controller/VGAVerticalCounter/n118 , 
         \display_controller/disp_paddleB/n6 , 
         \vga_controller/VGAHorizontalCounter/n8 , 
         \vga_controller/VGAHorizontalCounter/n6 , pixval_paddleBdriven, 
         \vga_controller/VGAHorizontalCounter/n176 , vsync_c, 
         \vga_controller/VGAHorizontalCounter/n12 , 
         \vga_controller/VGAHorizontalCounter/n198 , 
         \vga_controller/VGAHorizontalCounter/n7 , 
         \vga_controller/VGAHorizontalCounter/n180 , 
         \vga_controller/VGAHorizontalCounter/n1788 , 
         \vga_controller/VGAHorizontalCounter/n7_adj_377 , n1899, ref_clk_c, 
         \pll_module/lscc_pll_inst/feedback_w ;

  SLICE_0 SLICE_0( .DI0(\vga_controller/VGAVerticalCounter/n45[9] ), 
    .D1(\vga_controller/VGAVerticalCounter/n2314 ), 
    .D0(\vga_controller/VGAVerticalCounter/n1532 ), .C0(\ypix[9] ), 
    .CE(\vga_controller/n554 ), .LSR(\vga_controller/n1375 ), .CLK(vga_clk), 
    .CIN0(\vga_controller/VGAVerticalCounter/n1532 ), 
    .CIN1(\vga_controller/VGAVerticalCounter/n2314 ), .Q0(\ypix[9] ), 
    .F0(\vga_controller/VGAVerticalCounter/n45[9] ), 
    .COUT0(\vga_controller/VGAVerticalCounter/n2314 ));
  SLICE_1 SLICE_1( .DI1(\vga_controller/VGAVerticalCounter/n45[8] ), 
    .DI0(\vga_controller/VGAVerticalCounter/n45[7] ), 
    .D1(\vga_controller/VGAVerticalCounter/n2311 ), .C1(\ypix[8] ), 
    .D0(\vga_controller/VGAVerticalCounter/n1530 ), 
    .C0(\vga_controller/VGAVerticalCounter/ypix[7] ), 
    .CE(\vga_controller/n554 ), .LSR(\vga_controller/n1375 ), .CLK(vga_clk), 
    .CIN0(\vga_controller/VGAVerticalCounter/n1530 ), 
    .CIN1(\vga_controller/VGAVerticalCounter/n2311 ), 
    .Q0(\vga_controller/VGAVerticalCounter/ypix[7] ), .Q1(\ypix[8] ), 
    .F0(\vga_controller/VGAVerticalCounter/n45[7] ), 
    .F1(\vga_controller/VGAVerticalCounter/n45[8] ), 
    .COUT1(\vga_controller/VGAVerticalCounter/n1532 ), 
    .COUT0(\vga_controller/VGAVerticalCounter/n2311 ));
  SLICE_2 SLICE_2( .DI1(\vga_controller/VGAVerticalCounter/n45[6] ), 
    .DI0(\vga_controller/VGAVerticalCounter/n45[5] ), 
    .D1(\vga_controller/VGAVerticalCounter/n2308 ), .C1(\ypix[6] ), 
    .D0(\vga_controller/VGAVerticalCounter/n1528 ), 
    .C0(\vga_controller/VGAVerticalCounter/ypix[5] ), 
    .CE(\vga_controller/n554 ), .LSR(\vga_controller/n1375 ), .CLK(vga_clk), 
    .CIN0(\vga_controller/VGAVerticalCounter/n1528 ), 
    .CIN1(\vga_controller/VGAVerticalCounter/n2308 ), 
    .Q0(\vga_controller/VGAVerticalCounter/ypix[5] ), .Q1(\ypix[6] ), 
    .F0(\vga_controller/VGAVerticalCounter/n45[5] ), 
    .F1(\vga_controller/VGAVerticalCounter/n45[6] ), 
    .COUT1(\vga_controller/VGAVerticalCounter/n1530 ), 
    .COUT0(\vga_controller/VGAVerticalCounter/n2308 ));
  SLICE_3 SLICE_3( .DI1(\vga_controller/VGAVerticalCounter/n45[4] ), 
    .DI0(\vga_controller/VGAVerticalCounter/n45[3] ), 
    .D1(\vga_controller/VGAVerticalCounter/n2305 ), 
    .C1(\vga_controller/ypix[4] ), 
    .D0(\vga_controller/VGAVerticalCounter/n1526 ), 
    .C0(\vga_controller/VGAVerticalCounter/ypix[3] ), 
    .CE(\vga_controller/n554 ), .LSR(\vga_controller/n1375 ), .CLK(vga_clk), 
    .CIN0(\vga_controller/VGAVerticalCounter/n1526 ), 
    .CIN1(\vga_controller/VGAVerticalCounter/n2305 ), 
    .Q0(\vga_controller/VGAVerticalCounter/ypix[3] ), 
    .Q1(\vga_controller/ypix[4] ), 
    .F0(\vga_controller/VGAVerticalCounter/n45[3] ), 
    .F1(\vga_controller/VGAVerticalCounter/n45[4] ), 
    .COUT1(\vga_controller/VGAVerticalCounter/n1528 ), 
    .COUT0(\vga_controller/VGAVerticalCounter/n2305 ));
  SLICE_4 SLICE_4( .DI1(\vga_controller/VGAVerticalCounter/n45[2] ), 
    .DI0(\vga_controller/VGAVerticalCounter/n45[1] ), 
    .D1(\vga_controller/VGAVerticalCounter/n2302 ), 
    .C1(\vga_controller/VGAVerticalCounter/ypix[2] ), 
    .D0(\vga_controller/VGAVerticalCounter/n1524 ), 
    .C0(\vga_controller/VGAVerticalCounter/ypix[1] ), 
    .CE(\vga_controller/n554 ), .LSR(\vga_controller/n1375 ), .CLK(vga_clk), 
    .CIN0(\vga_controller/VGAVerticalCounter/n1524 ), 
    .CIN1(\vga_controller/VGAVerticalCounter/n2302 ), 
    .Q0(\vga_controller/VGAVerticalCounter/ypix[1] ), 
    .Q1(\vga_controller/VGAVerticalCounter/ypix[2] ), 
    .F0(\vga_controller/VGAVerticalCounter/n45[1] ), 
    .F1(\vga_controller/VGAVerticalCounter/n45[2] ), 
    .COUT1(\vga_controller/VGAVerticalCounter/n1526 ), 
    .COUT0(\vga_controller/VGAVerticalCounter/n2302 ));
  SLICE_5 SLICE_5( .DI1(\vga_controller/VGAVerticalCounter/n45[0] ), 
    .D1(\vga_controller/VGAVerticalCounter/n2299 ), 
    .C1(\vga_controller/VGAVerticalCounter/ypix[0] ), .B1(VCC_net), 
    .CE(\vga_controller/n554 ), .LSR(\vga_controller/n1375 ), .CLK(vga_clk), 
    .CIN1(\vga_controller/VGAVerticalCounter/n2299 ), 
    .Q1(\vga_controller/VGAVerticalCounter/ypix[0] ), 
    .F1(\vga_controller/VGAVerticalCounter/n45[0] ), 
    .COUT1(\vga_controller/VGAVerticalCounter/n1524 ), 
    .COUT0(\vga_controller/VGAVerticalCounter/n2299 ));
  SLICE_6 SLICE_6( .DI1(\vga_controller/VGAHorizontalCounter/n45[0] ), 
    .D1(\vga_controller/VGAHorizontalCounter/n2293 ), 
    .C1(\vga_controller/VGAHorizontalCounter/xpix[0] ), .B1(VCC_net), 
    .LSR(\vga_controller/VGAHorizontalCounter/n582 ), .CLK(vga_clk), 
    .CIN1(\vga_controller/VGAHorizontalCounter/n2293 ), 
    .Q1(\vga_controller/VGAHorizontalCounter/xpix[0] ), 
    .F1(\vga_controller/VGAHorizontalCounter/n45[0] ), 
    .COUT1(\vga_controller/VGAHorizontalCounter/n1535 ), 
    .COUT0(\vga_controller/VGAHorizontalCounter/n2293 ));
  SLICE_7 SLICE_7( .DI0(\vga_controller/VGAHorizontalCounter/n45[9] ), 
    .D1(\vga_controller/VGAHorizontalCounter/n2341 ), 
    .D0(\vga_controller/VGAHorizontalCounter/n1543 ), 
    .C0(\vga_controller/xpix[9] ), 
    .LSR(\vga_controller/VGAHorizontalCounter/n582 ), .CLK(vga_clk), 
    .CIN0(\vga_controller/VGAHorizontalCounter/n1543 ), 
    .CIN1(\vga_controller/VGAHorizontalCounter/n2341 ), 
    .Q0(\vga_controller/xpix[9] ), 
    .F0(\vga_controller/VGAHorizontalCounter/n45[9] ), 
    .COUT0(\vga_controller/VGAHorizontalCounter/n2341 ));
  SLICE_8 SLICE_8( .DI1(\vga_controller/VGAHorizontalCounter/n45[8] ), 
    .DI0(\vga_controller/VGAHorizontalCounter/n45[7] ), 
    .D1(\vga_controller/VGAHorizontalCounter/n2338 ), 
    .C1(\vga_controller/xpix[8] ), 
    .D0(\vga_controller/VGAHorizontalCounter/n1541 ), 
    .C0(\vga_controller/xpix[7] ), 
    .LSR(\vga_controller/VGAHorizontalCounter/n582 ), .CLK(vga_clk), 
    .CIN0(\vga_controller/VGAHorizontalCounter/n1541 ), 
    .CIN1(\vga_controller/VGAHorizontalCounter/n2338 ), 
    .Q0(\vga_controller/xpix[7] ), .Q1(\vga_controller/xpix[8] ), 
    .F0(\vga_controller/VGAHorizontalCounter/n45[7] ), 
    .F1(\vga_controller/VGAHorizontalCounter/n45[8] ), 
    .COUT1(\vga_controller/VGAHorizontalCounter/n1543 ), 
    .COUT0(\vga_controller/VGAHorizontalCounter/n2338 ));
  SLICE_9 SLICE_9( .DI1(\vga_controller/VGAHorizontalCounter/n45[6] ), 
    .DI0(\vga_controller/VGAHorizontalCounter/n45[5] ), 
    .D1(\vga_controller/VGAHorizontalCounter/n2335 ), 
    .C1(\vga_controller/xpix[6] ), 
    .D0(\vga_controller/VGAHorizontalCounter/n1539 ), 
    .C0(\vga_controller/xpix[5] ), 
    .LSR(\vga_controller/VGAHorizontalCounter/n582 ), .CLK(vga_clk), 
    .CIN0(\vga_controller/VGAHorizontalCounter/n1539 ), 
    .CIN1(\vga_controller/VGAHorizontalCounter/n2335 ), 
    .Q0(\vga_controller/xpix[5] ), .Q1(\vga_controller/xpix[6] ), 
    .F0(\vga_controller/VGAHorizontalCounter/n45[5] ), 
    .F1(\vga_controller/VGAHorizontalCounter/n45[6] ), 
    .COUT1(\vga_controller/VGAHorizontalCounter/n1541 ), 
    .COUT0(\vga_controller/VGAHorizontalCounter/n2335 ));
  SLICE_10 SLICE_10( .DI1(\vga_controller/VGAHorizontalCounter/n45[4] ), 
    .DI0(\vga_controller/VGAHorizontalCounter/n45[3] ), 
    .D1(\vga_controller/VGAHorizontalCounter/n2332 ), 
    .C1(\vga_controller/xpix[4] ), 
    .D0(\vga_controller/VGAHorizontalCounter/n1537 ), 
    .C0(\vga_controller/VGAHorizontalCounter/xpix[3] ), 
    .LSR(\vga_controller/VGAHorizontalCounter/n582 ), .CLK(vga_clk), 
    .CIN0(\vga_controller/VGAHorizontalCounter/n1537 ), 
    .CIN1(\vga_controller/VGAHorizontalCounter/n2332 ), 
    .Q0(\vga_controller/VGAHorizontalCounter/xpix[3] ), 
    .Q1(\vga_controller/xpix[4] ), 
    .F0(\vga_controller/VGAHorizontalCounter/n45[3] ), 
    .F1(\vga_controller/VGAHorizontalCounter/n45[4] ), 
    .COUT1(\vga_controller/VGAHorizontalCounter/n1539 ), 
    .COUT0(\vga_controller/VGAHorizontalCounter/n2332 ));
  SLICE_11 SLICE_11( .DI1(\vga_controller/VGAHorizontalCounter/n45[2] ), 
    .DI0(\vga_controller/VGAHorizontalCounter/n45[1] ), 
    .D1(\vga_controller/VGAHorizontalCounter/n2329 ), 
    .C1(\vga_controller/VGAHorizontalCounter/xpix[2] ), 
    .D0(\vga_controller/VGAHorizontalCounter/n1535 ), 
    .C0(\vga_controller/VGAHorizontalCounter/xpix[1] ), 
    .LSR(\vga_controller/VGAHorizontalCounter/n582 ), .CLK(vga_clk), 
    .CIN0(\vga_controller/VGAHorizontalCounter/n1535 ), 
    .CIN1(\vga_controller/VGAHorizontalCounter/n2329 ), 
    .Q0(\vga_controller/VGAHorizontalCounter/xpix[1] ), 
    .Q1(\vga_controller/VGAHorizontalCounter/xpix[2] ), 
    .F0(\vga_controller/VGAHorizontalCounter/n45[1] ), 
    .F1(\vga_controller/VGAHorizontalCounter/n45[2] ), 
    .COUT1(\vga_controller/VGAHorizontalCounter/n1537 ), 
    .COUT0(\vga_controller/VGAHorizontalCounter/n2329 ));
  SLICE_12 SLICE_12( .D1(\vga_controller/xpix[8] ), 
    .C1(\vga_controller/n1963 ), .B1(\vga_controller/n12 ), 
    .A1(\vga_controller/n1104 ), .D0(\vga_controller/xpix[9] ), 
    .C0(\vga_controller/xpix[8] ), .A0(\vga_controller/xpix[7] ), 
    .F0(\vga_controller/n1963 ), .F1(\vga_controller/n2320 ));
  SLICE_13 SLICE_13( .D1(\vga_controller/xpix[8] ), 
    .C1(\vga_controller/xpix[4] ), .D0(\vga_controller/n1878 ), 
    .C0(\vga_controller/n2320 ), .B0(\vga_controller/n210 ), 
    .A0(\vga_controller/xpix[8] ), .F0(\vga_controller/n12 ), 
    .F1(\vga_controller/VGAHorizontalCounter/n11 ));
  SLICE_14 SLICE_14( .D1(\vga_controller/xpix[8] ), 
    .C1(\vga_controller/n1104 ), .B1(\vga_controller/xpix[9] ), 
    .A1(\vga_controller/n2079 ), .D0(\vga_controller/xpix[6] ), 
    .C0(\vga_controller/xpix[5] ), .B0(\vga_controller/xpix[7] ), 
    .A0(\vga_controller/xpix[4] ), .F0(\vga_controller/n1104 ), 
    .F1(\vga_controller/hrange[1] ));
  SLICE_15 SLICE_15( .D0(\vga_controller/xpix[6] ), 
    .C0(\vga_controller/hrange[1] ), .B0(\vga_controller/xpix[7] ), 
    .A0(\vga_controller/xpix[5] ), .F0(\vga_controller/n2079 ));
  SLICE_16 SLICE_16( .D1(\vga_controller/xpix[5] ), .C1(hsync_c), 
    .B1(\vga_controller/xpix[6] ), .A1(\vga_controller/xpix[7] ), 
    .D0(\vga_controller/xpix[9] ), .C0(\vga_controller/n2081 ), 
    .B0(\vga_controller/n2082 ), .A0(\vga_controller/xpix[8] ), .F0(hsync_c), 
    .F1(\vga_controller/n2082 ));
  SLICE_18 SLICE_18( .D1(\vga_controller/hrange[1] ), .C1(\vga_controller/n6 ), 
    .B1(\vga_controller/n2323 ), .A1(\vga_controller/n2320 ), .D0(n1874), 
    .C0(\vga_controller/n18 ), .B0(\vga_controller/n17 ), 
    .A0(\vga_controller/vrange[0] ), .F0(\vga_controller/n6 ), .F1(blue_c));
  SLICE_19 SLICE_19( .D1(\vga_controller/vrange[0] ), 
    .C1(\vga_controller/n1406 ), .B1(\ypix[9] ), 
    .A1(\vga_controller/vrange_1__N_26 ), 
    .D0(\vga_controller/VGAVerticalCounter/ypix[1] ), 
    .C0(\vga_controller/n57 ), 
    .B0(\vga_controller/VGAVerticalCounter/ypix[0] ), 
    .A0(\vga_controller/n4_adj_379 ), .F0(\vga_controller/n1406 ), 
    .F1(\vga_controller/vrange[0] ));
  SLICE_20 SLICE_20( .D1(\vga_controller/n1399 ), .C1(\vga_controller/n70 ), 
    .B1(\vga_controller/ypix[4] ), .A1(\vga_controller/n101 ), 
    .D0(\vga_controller/VGAVerticalCounter/ypix[1] ), 
    .C0(\vga_controller/VGAVerticalCounter/ypix[3] ), 
    .B0(\vga_controller/VGAVerticalCounter/ypix[2] ), 
    .F0(\vga_controller/n70 ), .F1(\vga_controller/n2083 ));
  SLICE_21 SLICE_21( .D1(\ypix[9] ), .C1(\vga_controller/n1399 ), 
    .A1(\vga_controller/n101 ), 
    .D0(\vga_controller/VGAVerticalCounter/ypix[2] ), 
    .C0(\vga_controller/VGAVerticalCounter/n6 ), 
    .B0(\vga_controller/VGAVerticalCounter/ypix[1] ), 
    .A0(\vga_controller/ypix[4] ), .F0(\vga_controller/n1399 ), 
    .F1(\vga_controller/vrange_1__N_26 ));
  SLICE_23 SLICE_23( .D1(\ypix[9] ), .C1(\vga_controller/n1365 ), 
    .B1(\vga_controller/n2323 ), .A1(\vga_controller/n1406 ), 
    .D0(\vga_controller/ypix[4] ), .C0(\vga_controller/n101 ), 
    .A0(\vga_controller/n70 ), .F0(\vga_controller/n1365 ), 
    .F1(\vga_controller/n2323 ));
  SLICE_24 SLICE_24( .D1(\ypix[8] ), .C1(n1767), .B1(n4), .A1(\ypix[6] ), 
    .D0(\ypix[6] ), .C0(\vga_controller/VGAVerticalCounter/ypix[3] ), 
    .B0(\vga_controller/VGAVerticalCounter/n118 ), 
    .A0(\vga_controller/VGAVerticalCounter/ypix[7] ), .F0(n1767), 
    .F1(\display_controller/disp_paddleB/n6 ));
  SLICE_26 SLICE_26( .D1(\vga_controller/xpix[7] ), 
    .C1(\vga_controller/VGAHorizontalCounter/n8 ), 
    .B1(\vga_controller/xpix[8] ), .A1(\vga_controller/xpix[6] ), 
    .D0(\vga_controller/xpix[4] ), 
    .C0(\vga_controller/VGAHorizontalCounter/n6 ), 
    .B0(\vga_controller/VGAHorizontalCounter/xpix[3] ), 
    .A0(\vga_controller/xpix[5] ), 
    .F0(\vga_controller/VGAHorizontalCounter/n8 ), .F1(pixval_paddleBdriven));
  SLICE_27 SLICE_27( .D1(\vga_controller/xpix[5] ), 
    .C1(\vga_controller/VGAHorizontalCounter/n176 ), 
    .B1(\vga_controller/xpix[9] ), .A1(\vga_controller/xpix[6] ), 
    .D0(\vga_controller/xpix[4] ), 
    .C0(\vga_controller/VGAHorizontalCounter/xpix[2] ), 
    .A0(\vga_controller/VGAHorizontalCounter/xpix[3] ), 
    .F0(\vga_controller/VGAHorizontalCounter/n176 ), 
    .F1(\vga_controller/VGAHorizontalCounter/n6 ));
  SLICE_28 SLICE_28( .C1(\vga_controller/n1878 ), .A1(\vga_controller/n1104 ), 
    .D0(\vga_controller/xpix[5] ), .C0(\vga_controller/xpix[4] ), 
    .B0(\vga_controller/xpix[7] ), .A0(\vga_controller/xpix[6] ), 
    .F0(\vga_controller/n1878 ), .F1(\vga_controller/n2081 ));
  SLICE_31 SLICE_31( .D1(\vga_controller/VGAVerticalCounter/ypix[3] ), 
    .C1(\vga_controller/n101 ), .D0(\ypix[6] ), .C0(\ypix[8] ), 
    .B0(\vga_controller/VGAVerticalCounter/ypix[7] ), 
    .A0(\vga_controller/VGAVerticalCounter/ypix[5] ), 
    .F0(\vga_controller/n101 ), .F1(\vga_controller/VGAVerticalCounter/n6 ));
  SLICE_32 SLICE_32( .D1(\vga_controller/n57 ), .C1(\ypix[9] ), 
    .B1(\vga_controller/n554 ), .A1(\vga_controller/n4_adj_379 ), 
    .D0(\ypix[9] ), .C0(\vga_controller/n2083 ), .B0(\vga_controller/n1406 ), 
    .A0(vsync_c), .F0(vsync_c), .F1(\vga_controller/n1375 ));
  SLICE_34 SLICE_34( .D1(\vga_controller/VGAVerticalCounter/ypix[7] ), 
    .C1(\vga_controller/n57 ), .B1(\vga_controller/ypix[4] ), 
    .A1(\vga_controller/VGAVerticalCounter/ypix[5] ), 
    .B0(\vga_controller/VGAVerticalCounter/ypix[3] ), 
    .A0(\vga_controller/VGAVerticalCounter/ypix[2] ), 
    .F0(\vga_controller/n57 ), .F1(n4));
  SLICE_37 SLICE_37( .D1(\ypix[9] ), 
    .C1(\vga_controller/VGAHorizontalCounter/n12 ), 
    .B1(\vga_controller/VGAHorizontalCounter/n11 ), .A1(\vga_controller/n70 ), 
    .D0(\vga_controller/VGAHorizontalCounter/xpix[2] ), 
    .C0(\vga_controller/n4_adj_379 ), 
    .B0(\vga_controller/VGAHorizontalCounter/xpix[3] ), 
    .A0(\vga_controller/VGAHorizontalCounter/xpix[1] ), 
    .F0(\vga_controller/VGAHorizontalCounter/n12 ), .F1(\vga_controller/n18 ));
  SLICE_38 SLICE_38( .D1(\vga_controller/VGAVerticalCounter/ypix[7] ), 
    .C1(\vga_controller/VGAVerticalCounter/n118 ), .B1(\ypix[6] ), 
    .A1(\ypix[8] ), .D0(\vga_controller/ypix[4] ), 
    .B0(\vga_controller/VGAVerticalCounter/ypix[5] ), 
    .F0(\vga_controller/VGAVerticalCounter/n118 ), 
    .F1(\vga_controller/n4_adj_379 ));
  SLICE_40 SLICE_40( .D1(\vga_controller/xpix[9] ), .C1(\vga_controller/n210 ), 
    .B1(\vga_controller/VGAHorizontalCounter/n198 ), 
    .A1(\vga_controller/xpix[8] ), .D0(\vga_controller/xpix[6] ), 
    .B0(\vga_controller/xpix[5] ), .A0(\vga_controller/xpix[7] ), 
    .F0(\vga_controller/n210 ), 
    .F1(\vga_controller/VGAHorizontalCounter/n582 ));
  SLICE_42 SLICE_42( .D1(\vga_controller/xpix[9] ), 
    .C1(\vga_controller/VGAHorizontalCounter/n7 ), 
    .B1(\vga_controller/VGAHorizontalCounter/n180 ), 
    .A1(\vga_controller/VGAHorizontalCounter/n1788 ), 
    .D0(\vga_controller/VGAHorizontalCounter/xpix[3] ), 
    .B0(\vga_controller/xpix[4] ), .A0(\vga_controller/xpix[8] ), 
    .F0(\vga_controller/VGAHorizontalCounter/n7 ), .F1(\vga_controller/n554 ));
  SLICE_44 SLICE_44( .D1(\vga_controller/xpix[4] ), 
    .C1(\vga_controller/VGAHorizontalCounter/n180 ), 
    .A1(\vga_controller/VGAHorizontalCounter/xpix[3] ), 
    .D0(\vga_controller/VGAHorizontalCounter/xpix[2] ), 
    .C0(\vga_controller/VGAHorizontalCounter/xpix[1] ), 
    .B0(\vga_controller/VGAHorizontalCounter/xpix[0] ), 
    .F0(\vga_controller/VGAHorizontalCounter/n180 ), 
    .F1(\vga_controller/VGAHorizontalCounter/n198 ));
  SLICE_46 SLICE_46( .D1(\vga_controller/xpix[9] ), 
    .C1(\vga_controller/VGAHorizontalCounter/n7_adj_377 ), 
    .B1(\vga_controller/xpix[4] ), 
    .A1(\vga_controller/VGAHorizontalCounter/n1788 ), 
    .D0(\vga_controller/VGAHorizontalCounter/xpix[2] ), 
    .B0(\vga_controller/VGAHorizontalCounter/xpix[3] ), 
    .A0(\vga_controller/xpix[8] ), 
    .F0(\vga_controller/VGAHorizontalCounter/n7_adj_377 ), .F1(n1899));
  SLICE_49 SLICE_49( .D0(\ypix[9] ), .C0(pixval_paddleBdriven), 
    .B0(\display_controller/disp_paddleB/n6 ), .A0(n1899), .F0(n1874));
  SLICE_51 SLICE_51( .D1(\vga_controller/xpix[7] ), 
    .C1(\vga_controller/xpix[6] ), .B1(\vga_controller/xpix[5] ), 
    .D0(\vga_controller/xpix[6] ), .C0(\vga_controller/xpix[7] ), 
    .B0(\vga_controller/xpix[9] ), .A0(\vga_controller/xpix[5] ), 
    .F0(\vga_controller/n17 ), 
    .F1(\vga_controller/VGAHorizontalCounter/n1788 ));
  SLICE_56 SLICE_56( .F0(VCC_net));
  pll_module_lscc_pll_inst_u_PLL_B \pll_module.lscc_pll_inst.u_PLL_B ( 
    .REFERENCECLK(ref_clk_c), .FEEDBACK(\pll_module/lscc_pll_inst/feedback_w ), 
    .RESET_N(VCC_net), .INTFBOUT(\pll_module/lscc_pll_inst/feedback_w ), 
    .OUTGLOBAL(vga_clk));
  hsync hsync_I( .PADDO(hsync_c), .hsync(hsync));
  vsync vsync_I( .PADDO(vsync_c), .vsync(vsync));
  red red_I( .PADDO(blue_c), .red(red));
  green green_I( .PADDO(blue_c), .green(green));
  blue blue_I( .PADDO(blue_c), .blue(blue));
  ref_clk ref_clk_I( .PADDI(ref_clk_c), .ref_clk(ref_clk));
endmodule

module SLICE_0 ( input DI0, D1, D0, C0, CE, LSR, CLK, CIN0, CIN1, output Q0, 
    F0, COUT0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  fa2 \vga_controller/VGAVerticalCounter/vcount_71_add_4_11 ( .A0(GNDI), 
    .B0(GNDI), .C0(C0), .D0(D0), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(D1), 
    .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \vga_controller/VGAVerticalCounter/vcount_71__i9 ( .D0(DI0_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module fa2 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI0, CI1, output S0, S1, 
    CO0, CO1 );

  FA2 inst1( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .CI0(CI0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI1(CI1), .CO0(CO0), .CO1(CO1), .S0(S0), .S1(S1));
  defparam inst1.INIT0 = "0xc33c";
  defparam inst1.INIT1 = "0xc33c";
endmodule

module gnd ( output PWR0 );

  VLO INST1( .Z(PWR0));
endmodule

module ffsre2 ( input D0, SP, CK, LSR, output Q );

  FD1P3XZ INST01( .D(D0), .SP(SP), .CK(CK), .SR(LSR), .Q(Q));
  defparam INST01.REGSET = "RESET";
  defparam INST01.SRMODE = "CE_OVER_LSR";
endmodule

module SLICE_1 ( input DI1, DI0, D1, C1, D0, C0, CE, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \vga_controller/VGAVerticalCounter/vcount_71_add_4_9 ( .A0(GNDI), 
    .B0(GNDI), .C0(C0), .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), 
    .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \vga_controller/VGAVerticalCounter/vcount_71__i7 ( .D0(DI0_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ffsre2 \vga_controller/VGAVerticalCounter/vcount_71__i8 ( .D0(DI1_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_2 ( input DI1, DI0, D1, C1, D0, C0, CE, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \vga_controller/VGAVerticalCounter/vcount_71_add_4_7 ( .A0(GNDI), 
    .B0(GNDI), .C0(C0), .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), 
    .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \vga_controller/VGAVerticalCounter/vcount_71__i5 ( .D0(DI0_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ffsre2 \vga_controller/VGAVerticalCounter/vcount_71__i6 ( .D0(DI1_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_3 ( input DI1, DI0, D1, C1, D0, C0, CE, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \vga_controller/VGAVerticalCounter/vcount_71_add_4_5 ( .A0(GNDI), 
    .B0(GNDI), .C0(C0), .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), 
    .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \vga_controller/VGAVerticalCounter/vcount_71__i3 ( .D0(DI0_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ffsre2 \vga_controller/VGAVerticalCounter/vcount_71__i4 ( .D0(DI1_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_4 ( input DI1, DI0, D1, C1, D0, C0, CE, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \vga_controller/VGAVerticalCounter/vcount_71_add_4_3 ( .A0(GNDI), 
    .B0(GNDI), .C0(C0), .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), 
    .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \vga_controller/VGAVerticalCounter/vcount_71__i1 ( .D0(DI0_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ffsre2 \vga_controller/VGAVerticalCounter/vcount_71__i2 ( .D0(DI1_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_5 ( input DI1, D1, C1, B1, CE, LSR, CLK, CIN1, output Q1, F1, 
    COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  fa2 \vga_controller/VGAVerticalCounter/vcount_71_add_4_1 ( .A0(GNDI), 
    .B0(GNDI), .C0(GNDI), .D0(VCCI), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), 
    .CI0(VCCI), .CI1(CIN1), .S0(), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \vga_controller/VGAVerticalCounter/vcount_71__i0 ( .D0(DI1_dly), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module vcc ( output PWR1 );

  VHI INST1( .Z(PWR1));
endmodule

module SLICE_6 ( input DI1, D1, C1, B1, LSR, CLK, CIN1, output Q1, F1, COUT1, 
    COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, LSR_dly;

  fa2 \vga_controller/VGAHorizontalCounter/hcount_69_add_4_1 ( .A0(GNDI), 
    .B0(GNDI), .C0(GNDI), .D0(VCCI), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), 
    .CI0(VCCI), .CI1(CIN1), .S0(), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \vga_controller/VGAHorizontalCounter/hcount_69__i0 ( .D0(DI1_dly), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_7 ( input DI0, D1, D0, C0, LSR, CLK, CIN0, CIN1, output Q0, F0, 
    COUT0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  fa2 \vga_controller/VGAHorizontalCounter/hcount_69_add_4_11 ( .A0(GNDI), 
    .B0(GNDI), .C0(C0), .D0(D0), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(D1), 
    .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \vga_controller/VGAHorizontalCounter/hcount_69__i9 ( .D0(DI0_dly), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_8 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, output 
    Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \vga_controller/VGAHorizontalCounter/hcount_69_add_4_9 ( .A0(GNDI), 
    .B0(GNDI), .C0(C0), .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), 
    .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \vga_controller/VGAHorizontalCounter/hcount_69__i7 ( .D0(DI0_dly), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \vga_controller/VGAHorizontalCounter/hcount_69__i8 ( .D0(DI1_dly), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_9 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, output 
    Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \vga_controller/VGAHorizontalCounter/hcount_69_add_4_7 ( .A0(GNDI), 
    .B0(GNDI), .C0(C0), .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), 
    .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \vga_controller/VGAHorizontalCounter/hcount_69__i5 ( .D0(DI0_dly), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \vga_controller/VGAHorizontalCounter/hcount_69__i6 ( .D0(DI1_dly), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_10 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \vga_controller/VGAHorizontalCounter/hcount_69_add_4_5 ( .A0(GNDI), 
    .B0(GNDI), .C0(C0), .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), 
    .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \vga_controller/VGAHorizontalCounter/hcount_69__i3 ( .D0(DI0_dly), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \vga_controller/VGAHorizontalCounter/hcount_69__i4 ( .D0(DI1_dly), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_11 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \vga_controller/VGAHorizontalCounter/hcount_69_add_4_3 ( .A0(GNDI), 
    .B0(GNDI), .C0(C0), .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), 
    .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \vga_controller/VGAHorizontalCounter/hcount_69__i1 ( .D0(DI0_dly), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \vga_controller/VGAHorizontalCounter/hcount_69__i2 ( .D0(DI1_dly), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_12 ( input D1, C1, B1, A1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut4 \vga_controller/i2_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40001 \vga_controller/i1693_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut4 ( input A, B, C, D, output Z );

  LUT4 #("0xCF8F") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40001 ( input A, B, C, D, output Z );

  LUT4 #("0xFA00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_13 ( input D1, C1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40002 \vga_controller/VGAHorizontalCounter/i1_2_lut ( .A(GNDI), .B(GNDI), 
    .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40003 \vga_controller/i25_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40002 ( input A, B, C, D, output Z );

  LUT4 #("0xFFF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40003 ( input A, B, C, D, output Z );

  LUT4 #("0x80D5") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_14 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40004 \vga_controller/i1_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40005 \vga_controller/VGAHorizontalCounter/i950_3_lut_4_lut ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40004 ( input A, B, C, D, output Z );

  LUT4 #("0x88C0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40005 ( input A, B, C, D, output Z );

  LUT4 #("0xCCC8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_15 ( input D0, C0, B0, A0, output F0 );

  lut40006 \vga_controller.i1785_2_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40006 ( input A, B, C, D, output Z );

  LUT4 #("0xF0F1") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_16 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40007 \vga_controller.i1784_2_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40008 \vga_controller/i1826_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40007 ( input A, B, C, D, output Z );

  LUT4 #("0x0F0E") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40008 ( input A, B, C, D, output Z );

  LUT4 #("0x27FF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_18 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40009 \vga_controller/i4_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40010 \vga_controller/i1_4_lut_adj_72 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40009 ( input A, B, C, D, output Z );

  LUT4 #("0x0080") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40010 ( input A, B, C, D, output Z );

  LUT4 #("0x5501") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_19 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40011 \vga_controller/i470_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40012 \vga_controller/VGAVerticalCounter/i2_4_lut_adj_67 ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40011 ( input A, B, C, D, output Z );

  LUT4 #("0xD515") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40012 ( input A, B, C, D, output Z );

  LUT4 #("0xFAEA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_20 ( input D1, C1, B1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40013 \vga_controller/i1781_2_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40014 \vga_controller/VGAVerticalCounter/i1_3_lut ( .A(GNDI), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40013 ( input A, B, C, D, output Z );

  LUT4 #("0xA800") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40014 ( input A, B, C, D, output Z );

  LUT4 #("0xF0C0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_21 ( input D1, C1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40015 \vga_controller/i942_3_lut ( .A(A1), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40016 \vga_controller/VGAVerticalCounter/i4_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40015 ( input A, B, C, D, output Z );

  LUT4 #("0x00F5") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40016 ( input A, B, C, D, output Z );

  LUT4 #("0x0040") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_23 ( input D1, C1, B1, A1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40017 \vga_controller/i14_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40018 \vga_controller/VGAVerticalCounter/i1_3_lut_adj_70 ( .A(A0), 
    .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40017 ( input A, B, C, D, output Z );

  LUT4 #("0x880F") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40018 ( input A, B, C, D, output Z );

  LUT4 #("0xF0A0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_24 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40019 \display_controller/disp_paddleB/i2_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40020 \vga_controller/VGAVerticalCounter/i1_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40019 ( input A, B, C, D, output Z );

  LUT4 #("0x11F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40020 ( input A, B, C, D, output Z );

  LUT4 #("0xA800") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_26 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40021 \vga_controller/VGAHorizontalCounter/i4_4_lut_adj_64 ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40022 \vga_controller/VGAHorizontalCounter/i3_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40021 ( input A, B, C, D, output Z );

  LUT4 #("0x0020") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40022 ( input A, B, C, D, output Z );

  LUT4 #("0xE0A0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_27 ( input D1, C1, B1, A1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40023 \vga_controller/VGAHorizontalCounter/i1_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40024 \vga_controller/VGAHorizontalCounter/i1_3_lut ( .A(A0), .B(GNDI), 
    .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40023 ( input A, B, C, D, output Z );

  LUT4 #("0x4CCC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40024 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_28 ( input C1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40025 \vga_controller/i1782_2_lut ( .A(A1), .B(GNDI), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40026 \vga_controller/i2_4_lut_adj_73 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40025 ( input A, B, C, D, output Z );

  LUT4 #("0x0A0A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40026 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_31 ( input D1, C1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40027 \vga_controller/VGAVerticalCounter/i1_2_lut_adj_71 ( .A(GNDI), 
    .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40028 \vga_controller/VGAVerticalCounter/i2_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40027 ( input A, B, C, D, output Z );

  LUT4 #("0xF000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40028 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_32 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40029 \vga_controller/VGAHorizontalCounter/i2_4_lut_adj_59 ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40030 \vga_controller/i13_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40029 ( input A, B, C, D, output Z );

  LUT4 #("0xC080") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40030 ( input A, B, C, D, output Z );

  LUT4 #("0xBB0F") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_34 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40031 \vga_controller/VGAVerticalCounter/i1_4_lut_adj_66 ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40032 \vga_controller/VGAVerticalCounter/i1_2_lut_adj_69 ( .A(A0), .B(B0), 
    .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40031 ( input A, B, C, D, output Z );

  LUT4 #("0xFFA8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40032 ( input A, B, C, D, output Z );

  LUT4 #("0x8888") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_37 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40033 \vga_controller/VGAHorizontalCounter/i8_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40034 \vga_controller/VGAHorizontalCounter/i2_4_lut_adj_61 ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40033 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40034 ( input A, B, C, D, output Z );

  LUT4 #("0xFCF8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_38 ( input D1, C1, B1, A1, D0, B0, output F0, F1 );
  wire   GNDI;

  lut40035 \vga_controller/VGAVerticalCounter/i1_4_lut_adj_68 ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40036 \vga_controller/VGAVerticalCounter/i1_2_lut ( .A(GNDI), .B(B0), 
    .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40035 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40036 ( input A, B, C, D, output Z );

  LUT4 #("0xFFCC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_40 ( input D1, C1, B1, A1, D0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40037 \vga_controller/VGAHorizontalCounter/i2_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40038 \vga_controller/VGAHorizontalCounter/i1_2_lut_3_lut_adj_65 ( .A(A0), 
    .B(B0), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40037 ( input A, B, C, D, output Z );

  LUT4 #("0xA800") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40038 ( input A, B, C, D, output Z );

  LUT4 #("0xFFEE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_42 ( input D1, C1, B1, A1, D0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40039 \vga_controller/VGAHorizontalCounter/i4_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40040 \vga_controller/VGAHorizontalCounter/i2_2_lut_3_lut ( .A(A0), 
    .B(B0), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40039 ( input A, B, C, D, output Z );

  LUT4 #("0x4000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40040 ( input A, B, C, D, output Z );

  LUT4 #("0x8800") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_44 ( input D1, C1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40041 \vga_controller/VGAHorizontalCounter/i1_2_lut_3_lut ( .A(A1), 
    .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40042 \vga_controller/VGAHorizontalCounter/i2_3_lut_adj_60 ( .A(GNDI), 
    .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40041 ( input A, B, C, D, output Z );

  LUT4 #("0xA000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40042 ( input A, B, C, D, output Z );

  LUT4 #("0xC000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_46 ( input D1, C1, B1, A1, D0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40043 \vga_controller/VGAHorizontalCounter/i4_4_lut_adj_63 ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40044 \vga_controller/VGAHorizontalCounter/i2_3_lut ( .A(A0), .B(B0), 
    .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40043 ( input A, B, C, D, output Z );

  LUT4 #("0x0040") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40044 ( input A, B, C, D, output Z );

  LUT4 #("0x5544") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_49 ( input D0, C0, B0, A0, output F0 );

  lut40045 \display_controller/disp_paddleB/i3_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40045 ( input A, B, C, D, output Z );

  LUT4 #("0x00C8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_51 ( input D1, C1, B1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40046 \vga_controller/VGAHorizontalCounter/i2_3_lut_adj_62 ( .A(GNDI), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40047 \vga_controller/VGAHorizontalCounter/i7_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40046 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40047 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_56 ( output F0 );
  wire   GNDI;

  lut40048 i2( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module lut40048 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module pll_module_lscc_pll_inst_u_PLL_B ( input REFERENCECLK, FEEDBACK, 
    RESET_N, output INTFBOUT, OUTGLOBAL );
  wire   GNDI;

  PLL_B_B \pll_module/lscc_pll_inst/u_PLL_B ( .REFERENCECLK(REFERENCECLK), 
    .FEEDBACK(FEEDBACK), .DYNAMICDELAY7(GNDI), .DYNAMICDELAY6(GNDI), 
    .DYNAMICDELAY5(GNDI), .DYNAMICDELAY4(GNDI), .DYNAMICDELAY3(GNDI), 
    .DYNAMICDELAY2(GNDI), .DYNAMICDELAY1(GNDI), .DYNAMICDELAY0(GNDI), 
    .BYPASS(GNDI), .RESET_N(RESET_N), .SCLK(GNDI), .SDI(GNDI), .LATCH(GNDI), 
    .INTFBOUT(INTFBOUT), .OUTCORE(), .OUTGLOBAL(OUTGLOBAL), .OUTCOREB(), 
    .OUTGLOBALB(), .SDO(), .LOCK());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (REFERENCECLK => OUTGLOBAL) = (0:0:0,0:0:0);
  endspecify

endmodule

module PLL_B_B ( input REFERENCECLK, FEEDBACK, DYNAMICDELAY7, DYNAMICDELAY6, 
    DYNAMICDELAY5, DYNAMICDELAY4, DYNAMICDELAY3, DYNAMICDELAY2, DYNAMICDELAY1, 
    DYNAMICDELAY0, BYPASS, RESET_N, SCLK, SDI, LATCH, output INTFBOUT, OUTCORE, 
    OUTGLOBAL, OUTCOREB, OUTGLOBALB, SDO, LOCK );

  PLL_B INST10( .REFERENCECLK(REFERENCECLK), .FEEDBACK(FEEDBACK), 
    .DYNAMICDELAY7(DYNAMICDELAY7), .DYNAMICDELAY6(DYNAMICDELAY6), 
    .DYNAMICDELAY5(DYNAMICDELAY5), .DYNAMICDELAY4(DYNAMICDELAY4), 
    .DYNAMICDELAY3(DYNAMICDELAY3), .DYNAMICDELAY2(DYNAMICDELAY2), 
    .DYNAMICDELAY1(DYNAMICDELAY1), .DYNAMICDELAY0(DYNAMICDELAY0), 
    .BYPASS(BYPASS), .RESET_N(RESET_N), .SCLK(SCLK), .SDI(SDI), .LATCH(LATCH), 
    .INTFBOUT(INTFBOUT), .OUTCORE(OUTCORE), .OUTGLOBAL(OUTGLOBAL), 
    .OUTCOREB(OUTCOREB), .OUTGLOBALB(OUTGLOBALB), .SDO(SDO), .LOCK(LOCK));
  defparam INST10.DELAY_ADJUSTMENT_MODE_FEEDBACK = "FIXED";
  defparam INST10.DELAY_ADJUSTMENT_MODE_RELATIVE = "FIXED";
  defparam INST10.DIVF = "66";
  defparam INST10.DIVQ = "5";
  defparam INST10.DIVR = "0";
  defparam INST10.ENABLE_ICEGATE_PORTA = "0";
  defparam INST10.ENABLE_ICEGATE_PORTB = "0";
  defparam INST10.FDA_FEEDBACK = "0";
  defparam INST10.FDA_RELATIVE = "0";
  defparam INST10.FEEDBACK_PATH = "SIMPLE";
  defparam INST10.FILTER_RANGE = "1";
  defparam INST10.PLLOUT_SELECT_PORTA = "GENCLK";
  defparam INST10.PLLOUT_SELECT_PORTB = "GENCLK";
  defparam INST10.SHIFTREG_DIV_MODE = "0";
  defparam INST10.TEST_MODE = "0";
  defparam INST10.EXTERNAL_DIVIDE_FACTOR = "NONE";
  defparam INST10.FREQUENCY_PIN_REFERENCECLK = "12.000000";
endmodule

module hsync ( input PADDO, output hsync );
  wire   VCCI;

  BB_B_B \hsync_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(hsync));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => hsync) = (0:0:0,0:0:0);
  endspecify

endmodule

module BB_B_B ( input T_N, I, output O, inout B );

  BB_B INST10( .T_N(T_N), .I(I), .O(O), .B(B));
endmodule

module vsync ( input PADDO, output vsync );
  wire   VCCI;

  BB_B_B \vsync_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(vsync));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => vsync) = (0:0:0,0:0:0);
  endspecify

endmodule

module red ( input PADDO, output red );
  wire   VCCI;

  BB_B_B \red_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(red));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => red) = (0:0:0,0:0:0);
  endspecify

endmodule

module green ( input PADDO, output green );
  wire   VCCI;

  BB_B_B \green_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(green));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => green) = (0:0:0,0:0:0);
  endspecify

endmodule

module blue ( input PADDO, output blue );
  wire   VCCI;

  BB_B_B \blue_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(blue));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => blue) = (0:0:0,0:0:0);
  endspecify

endmodule

module ref_clk ( output PADDI, input ref_clk );
  wire   GNDI;

  BB_B_B \ref_clk_pad.bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), .B(ref_clk));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (ref_clk => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule
